# ========================================
# Slack IT RAG Agent Environment Variables
# ========================================
# Copy this file to .env and fill in your actual values
# NEVER commit the .env file to git!

# ========================================
# SLACK CONFIGURATION
# ========================================
# Get from: https://api.slack.com/apps → Your App → OAuth & Permissions
# Format: xoxb-xxxxxxxxxxxx-xxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxx
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token-here

# ========================================
# GOOGLE DRIVE CONFIGURATION
# ========================================
# Folder ID from the URL: https://drive.google.com/drive/folders/{FOLDER_ID}
GOOGLE_DRIVE_FOLDER_ID=your-google-drive-folder-id

# For Service Account authentication (alternative to OAuth):
# 1. Download service account JSON from Google Cloud Console
# 2. Place it in project root as google-credentials.json
# 3. Add to .gitignore
# GOOGLE_SERVICE_ACCOUNT_EMAIL=your-service-account@project.iam.gserviceaccount.com

# ========================================
# SUPABASE CONFIGURATION
# ========================================
# Get from: Supabase Dashboard → Project Settings → API
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key

# PostgreSQL connection for chat memory
# Get from: Supabase Dashboard → Project Settings → Database
# Format: postgresql://postgres:[YOUR-PASSWORD]@[HOST]:[PORT]/postgres
SUPABASE_POSTGRES_CONNECTION=postgresql://postgres:your-password@db.your-project.supabase.co:5432/postgres

# ========================================
# OPENAI CONFIGURATION
# ========================================
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here

# Optional: Specify model (default: gpt-4)
OPENAI_MODEL=gpt-4
OPENAI_EMBEDDING_MODEL=text-embedding-ada-002

# ========================================
# LLAMAPARSE CONFIGURATION
# ========================================
# Get from: https://cloud.llamaindex.ai
# Used for document parsing (PDF, DOCX, etc.)
LLAMAPARSE_API_KEY=llx-your-llamaparse-api-key-here

# ========================================
# N8N CONFIGURATION
# ========================================
# Base URL of your n8n instance
N8N_HOST=https://your-n8n-instance.com

# Webhook path (will be auto-generated in n8n)
# Example: https://your-n8n.com/webhook/abc123def456
N8N_WEBHOOK_PATH=/webhook/your-webhook-id

# ========================================
# OPTIONAL: RATE LIMITS
# ========================================
# Adjust based on your API tier limits
LLAMAPARSE_WAIT_TIME=5000  # milliseconds between requests
MAX_RETRIES=3

# ========================================
# OPTIONAL: AI AGENT CONFIGURATION
# ========================================
# Number of documents to retrieve from vector store
VECTOR_SEARCH_TOP_K=3

# Minimum similarity score (0.0 to 1.0)
VECTOR_SIMILARITY_THRESHOLD=0.7

# Maximum tokens for AI response
MAX_RESPONSE_TOKENS=1000

# Text chunking parameters
CHUNK_SIZE=1000
CHUNK_OVERLAP=200

# ========================================
# OPTIONAL: LOGGING & MONITORING
# ========================================
LOG_LEVEL=info  # debug, info, warn, error
ENABLE_ANALYTICS=false

# ========================================
# SECURITY NOTES
# ========================================
# 1. NEVER commit this file with actual values to git
# 2. Add .env to your .gitignore
# 3. Use environment-specific files (.env.development, .env.production)
# 4. Rotate keys regularly (every 90 days recommended)
# 5. Use least-privilege access for service accounts
# 6. Monitor API usage for unusual patterns
